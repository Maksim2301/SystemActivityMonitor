package com.example.systemactivitymonitor.controller;

import com.example.systemactivitymonitor.model.User;
import com.example.systemactivitymonitor.service.UserService;
import com.example.systemactivitymonitor.util.Session;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.Stage;

import java.util.Optional;

public class UserController {

    @FXML private TextField registerUsername;
    @FXML private PasswordField registerPassword;
    @FXML private TextField registerEmail;
    @FXML private TextField loginUsername;
    @FXML private PasswordField loginPassword;
    @FXML private PasswordField oldPassword;
    @FXML private PasswordField newPassword;
    @FXML private Label messageLabel;

    private final UserService userService = new UserService();

    /** –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */
    @FXML
    private void registerUser() {
        try {
            userService.registerUser(
                    registerUsername.getText(),
                    registerPassword.getText(),
                    registerEmail.getText()
            );
            messageLabel.setText("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç–≤–æ—Ä–µ–Ω–∏–π!");
        } catch (Exception e) {
            messageLabel.setText("–ü–æ–º–∏–ª–∫–∞: " + e.getMessage());
        }
    }

    /** –í—Ö—ñ–¥ —É —Å–∏—Å—Ç–µ–º—É */
    @FXML
    private void loginUser() {
        Optional<User> userOpt = userService.login(
                loginUsername.getText(),
                loginPassword.getText()
        );

        if (userOpt.isPresent()) {
            User loggedUser = userOpt.get();
            Session.setCurrentUser(loggedUser);
            messageLabel.setText("–í—ñ—Ç–∞—é, " + loggedUser.getUsername() + "!");
            switchScene("/fxml/main.fxml");
        } else {
            messageLabel.setText("–ù–µ–≤—ñ—Ä–Ω—ñ –¥–∞–Ω—ñ –≤—Ö–æ–¥—É.");
        }
    }

    /** –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è —á–µ—Ä–µ–∑ */
    @FXML
    private void changePassword() {
        User user = Session.getCurrentUser();
        if (user == null) {
            messageLabel.setText("–°–ø–æ—á–∞—Ç–∫—É —É–≤—ñ–π–¥—ñ—Ç—å —É —Å–∏—Å—Ç–µ–º—É.");
            return;
        }

        String oldPass = oldPassword.getText();
        String newPass = newPassword.getText();

        if (oldPass.isBlank() || newPass.isBlank()) {
            messageLabel.setText("–û–±–∏–¥–≤–∞ –ø–æ–ª—è –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –∑–∞–ø–æ–≤–Ω–µ–Ω—ñ.");
            return;
        }

        if (oldPass.equals(newPass)) {
            messageLabel.setText("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ –∑–±—ñ–≥–∞—Ç–∏—Å—è –∑—ñ —Å—Ç–∞—Ä–∏–º.");
            return;
        }

        try {
            userService.changePassword(user, oldPass, newPass);
            messageLabel.setText("–ü–∞—Ä–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!");
        } catch (SecurityException e) {
            messageLabel.setText("–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π.");
        } catch (Exception e) {
            messageLabel.setText("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–∞—Ä–æ–ª—è: " + e.getMessage());
        }
    }

    /** –í–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */
    @FXML
    private void deleteMyAccount() {
        User user = Session.getCurrentUser();
        if (user == null) {
            messageLabel.setText("–í–∏ –Ω–µ –≤–≤—ñ–π—à–ª–∏ —É —Å–∏—Å—Ç–µ–º—É.");
            return;
        }

        Alert confirm = new Alert(Alert.AlertType.CONFIRMATION);
        confirm.setTitle("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è");
        confirm.setHeaderText("–í–∏–¥–∞–ª–µ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞");
        confirm.setContentText("–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç? –¶—é –¥—ñ—é –Ω–µ –º–æ–∂–Ω–∞ —Å–∫–∞—Å—É–≤–∞—Ç–∏.");

        Optional<ButtonType> result = confirm.showAndWait();
        if (result.isPresent() && result.get() == ButtonType.OK) {
            try {
                userService.deleteUser(user.getId());
                Session.logout();
                messageLabel.setText("üóë –ê–∫–∞—É–Ω—Ç –≤–∏–¥–∞–ª–µ–Ω–æ. –í–∏ –≤–∏–π—à–ª–∏ —ñ–∑ —Å–∏—Å—Ç–µ–º–∏.");
                switchScene("/fxml/user.fxml");
            } catch (Exception e) {
                messageLabel.setText(" –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ: " + e.getMessage());
            }
        } else {
            messageLabel.setText("–í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.");
        }
    }

    /** –í—Ö—ñ–¥ —è–∫ –≥—ñ—Å—Ç—å */
    @FXML
    private void loginAsGuest() {
        Session.setGuestMode();
        messageLabel.setText("–£–≤—ñ–π–¥–µ–Ω–æ —è–∫ –≥—ñ—Å—Ç—å. –î–∞–Ω—ñ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –±–∞–∑—É.");
        switchScene("/fxml/main.fxml");
    }

    /** –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é */
    @FXML
    private void goBack() {
        switchScene("/fxml/main.fxml");
    }

    /** –ü–µ—Ä–µ—Ö—ñ–¥ –º—ñ–∂ —Å—Ü–µ–Ω–∞–º–∏ */
    private void switchScene(String fxml) {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource(fxml));
            Scene scene = new Scene(loader.load());
            Stage stage = (Stage) messageLabel.getScene().getWindow();
            stage.setScene(scene);
            stage.setTitle("Main Menu");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
